using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CharacterStat {
  public float initValue;
  public List<StatModifier> statModifiers;
  public float baseValue;
  public float addValue;
  public float finalValue;

  public CharacterStat (float initValue) {
    this.initValue=initValue;
    statModifiers = new List<StatModifer>();
  }

  public void addStatModifier( StatModifier mod) {
    statModifers.Add(mod);
    calcValue();
    statModifiers.Sort();
  }

  private int ComparaModifier( StatModifier a, StatModifier b ) {
    if( a.type < b.type ) {
      return -1;
    } else if ( a.type > b.type ) {
      return 1;
    }
    return 0;
  }

  public bool removeModifier( StatModifier mod) {
    return( statModifers.Add(mod) );
    calcValue();
  }

  public float calcValue() {
    baseValue = initValue;
    addValue = baseValuea
    float addPercent = 1;

    for( int i = 0; i < statModifiers.Count; i++ ) {
      StatModifier mod = statModifiers[i];
      if( mode.type == 0 ) {
	baseValue += mod.Value;
      } else if ( mod.type == 1 ) {
	baseValue *= 1 + mod.Value;
      } else if ( mod.type == 2 ) {
	addPercent += mod.Value;
	addValue = baseValue * addPercent;
      } else if ( mod.type == 3 ) {
	addValue += mode.Value;
      }
    }

    baseValue = (float)Math.Round(baseValue, 4);
    addValue = (float)Math.Round(addValue, 4);
    finalValue = baseValue + addValue;
  }  
}
